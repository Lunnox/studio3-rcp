<project name="customTargets overrides" default="noDefault">
	<import file="${eclipse.pdebuild.templates}/headless-build/customTargets.xml"/>
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${builder}/ant-contrib/ant-contrib.jar" />
		</classpath>
	</taskdef>

	<!-- ===================================================================== -->
	<!-- Steps to do before the repositories are being processed -->
	<!-- ===================================================================== -->
	<target name="preProcessRepos">
		<p2.mirror destination="file:${repoBaseLocation}/mirrored">
			<source location="${studio3.p2.repo}" />
			<source location="${php.p2.repo}" />
			<source location="${pydev.p2.repo}" />
			<source location="${radrails.p2.repo}" />
			<iu id="com.aptana.feature.feature.group" />
			<iu id="com.aptana.php.feature.feature.group" />
			<iu id="org.python.pydev.feature.feature.group" />
			<iu id="org.python.pydev.django_templates.feature.feature.group" />
			<iu id="org.radrails.rails.feature.group" />
			<!-- http://help.eclipse.org/helios/index.jsp?topic=/org.eclipse.platform.doc.isv/guide/p2_repositorytasks.htm -->
			<slicingOptions includeOptional="false" />
		</p2.mirror>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the build is done. -->
	<!-- ===================================================================== -->
	<target name="postBuild">
		<antcall target="gatherLogs" />
		<antcall target="publish" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do to publish the build results -->
	<!-- ===================================================================== -->
	<target name="publish">
		<delete dir="${deploy.dir}" failonerror="false" />
		<mkdir dir="${deploy.dir}" />
		<!-- grab final version -->
		<property file="${buildDirectory}/finalFeaturesVersions.properties" />
		<propertycopy name="finalVersion" from="${topLevelElementId}" />
		<!-- copy over result zipfile -->
		<move file="${buildDirectory}/${buildType}.${build.revision}/${topLevelElementId}-${build.revision}-group.group.group.zip" tofile="${deploy.dir}/${topLevelElementId}-${finalVersion}.zip" />
		<!-- Create a version.txt file containing the final version string -->
		<echo message="${finalVersion}" file="${deploy.dir}/version.txt" />
		<!-- Extract zipped p2 repo too -->
		<unzip src="${deploy.dir}/${topLevelElementId}-${finalVersion}.zip" dest="${deploy.dir}" />
		<!-- copy over index.html file -->
		<replace token="ZIP_FILE" value="${topLevelElementId}-${finalVersion}.zip" file="${builder}/update_site/index.html" />
		<move file="${builder}/update_site/index.html" tofile="${deploy.dir}/index.html" />
	</target>
</project>
